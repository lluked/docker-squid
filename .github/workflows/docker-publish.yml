name: Docker Publish

on:
  schedule:
    - cron: '44 3 * * *'
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_images:
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        runs-on:
          - ubuntu-latest
          - buildjet-4vcpu-ubuntu-2204-arm
    runs-on: ${{ matrix.runs-on }}
    steps:
      - 
        name: Checkout repository
        uses: actions/checkout@v3
      - 
        name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2
      - 
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - 
        name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - 
        name: Build the Docker image
        id: build
        uses: docker/build-push-action@v4
        with:
          context: ./squid
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }},push-by-digest=true,name-canonical=true,push=true
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - 
        name: Export manifest
        run: |
          mkdir -p /tmp/manifests
          digest="${{ steps.build.outputs.digest }}"
          metadata="${{ steps.build.outputs.metadata }}"
          echo "$metadata" > "/tmp/manifests/${digest#sha256:}"
      - 
        name: Upload manifest
        uses: actions/upload-artifact@v3
        with:
          name: manifests
          path: /tmp/manifests/*
          if-no-files-found: error
          retention-days: 1

  create_manifest:
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    needs:
      - build_images
    steps:
      - 
        name: Download manifests
        uses: actions/download-artifact@v3
        with:
          name: manifests
          path: /tmp/manifests
      - 
        name: debug manifests
        run: |
          ls /tmp/manifests
          find ./ -type f | xargs tail -n +1
      - 
        name: debug $DOCKER_METADATA_OUTPUT_JSON
        run: |
          echo $DOCKER_METADATA_OUTPUT_JSON
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - 
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - 
        name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
#       - 
#         name: Create manifest list and push
#         working-directory: /tmp/manifests
#         run: |
#           docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
#             $(printf '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@sha256:%s ' *)
#       - 
#         name: Inspect image
#         run: |
#           docker buildx imagetools inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}

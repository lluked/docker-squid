name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '44 3 * * *'
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_images:
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        runs-on:
          - ubuntu-latest
          - buildjet-4vcpu-ubuntu-2204-arm
    runs-on: ${{ matrix.runs-on }}
    steps:
      - 
        name: Checkout repository
        uses: actions/checkout@v3
      - 
        name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - 
        name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - 
        name: Build the Docker image
        id: build
        uses: docker/build-push-action@v4
        with:
          context: ./squid
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:test
          outputs: type=image
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - 
        name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - 
        name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
  
  # manifest:
  #   permissions:
  #     contents: read
  #     packages: write
  #   runs-on: ubuntu-latest
  #   needs:
  #     - build_images
  #   steps:
  #     -
  #       name: Download digests
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: digests
  #         path: /tmp/digests
  #     -
  #       name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
  #     -
  #       name: Docker meta
  #       id: meta
  #       uses: docker/metadata-action@v4
  #       with:
  #         images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
  #     - 
  #       name: Log into registry ${{ env.REGISTRY }}
  #       if: github.event_name != 'pull_request'
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     -
  #       name: Create manifest list and push
  #       working-directory: /tmp/digests
  #       run: |
  #         docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
  #           $(printf '${{ steps.meta.outputs.bake-file.args.DOCKER_META_IMAGES }}@sha256:%s ' *)
  #     -
  #       name: Inspect image
  #       run: |
  #         docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
